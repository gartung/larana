# Master build script for CMake (automatically generated by "mrb newDev")

# Require minimum cmake version
CMAKE_MINIMUM_REQUIRED (VERSION 2.8)

# Add top level include
include_directories ( ${PROJECT_SOURCE_DIR} )

add_subdirectory(TrackContainment)

art_make(
	LIB_LIBRARIES 
		     lardataobj_RecoBase
		     lardataobj_AnalysisBase
		     larcore_Geometry
		     larcore_Geometry_Geometry_service
		     larsim_PhotonPropagation_PhotonVisibilityService_service
		     larana_OpticalDetector_OpDigiProperties_service
		     lardata_Utilities
		     nusimdata_SimulationBase
		     ${MF_MESSAGELOGGER}
		     ${MF_UTILITIES}
		     ${FHICLCPP}
		     cetlib cetlib_except
		     ${CLHEP}
		     ${ROOT_BASIC_LIB_LIST}
		     ${G4_LIB_LIST}
	MODULE_LIBRARIES  
			    larana_CosmicRemoval
			    larana_CosmicRemoval_TrackContainment
			    larsim_MCCheater_BackTracker_service
			    larreco_RecoAlg
                            larreco_RecoAlg_Cluster3DAlgs
			    larsim_Simulation nutools_ParticleNavigation lardataobj_Simulation
			    lardata_RecoObjects larreco_Deprecated
			    lardataobj_RecoBase
			    lardata_ArtDataHelper
			    lardataobj_MCBase
			    larcore_Geometry
			    larcore_Geometry_Geometry_service
			    larsim_PhotonPropagation_PhotonVisibilityService_service
		            larana_OpticalDetector_OpDigiProperties_service
			    larreco_Calorimetry
			    lardataobj_AnalysisBase
			    lardata_Utilities
			    nutools_MagneticField_MagneticField_service
			    nusimdata_SimulationBase
			    ${ART_FRAMEWORK_CORE}
			    ${ART_FRAMEWORK_PRINCIPAL}
			    ${ART_FRAMEWORK_SERVICES_REGISTRY}
			    ${ART_FRAMEWORK_SERVICES_BASIC}
			    ${ART_FRAMEWORK_SERVICES_OPTIONAL}
			    ${ART_FRAMEWORK_SERVICES_OPTIONAL_TFILESERVICE_SERVICE}
			    ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
			    art_Persistency_Common
			    art_Utilities
                            canvas
			    ${MF_MESSAGELOGGER}
			    ${MF_UTILITIES}
			    ${FHICLCPP}
			    cetlib cetlib_except
			    ${CLHEP}
			    ${ROOT_BASIC_LIB_LIST}
			    ${G4_LIB_LIST}
         )

install_headers()
install_fhicl()
install_source()


